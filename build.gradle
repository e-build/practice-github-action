import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.8.22'
    id("jacoco")
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

jacoco {
    toolVersion = "0.8.8"
}

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation("io.github.microutils:kotlin-logging-jvm:2.0.10")

    runtimeOnly 'com.mysql:mysql-connector-j'
    testRuntimeOnly("com.h2database:h2")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget = '17'
    }
}

tasks.register('unitTest', Test) {
    useJUnitPlatform {
        excludeTags 'integration'
    }
    jacoco {
        destinationFile = file("build/jacoco/jacoco-unit.exec")
    }
    testLogging {
        events "passed", "skipped", "failed"
    }
    maxHeapSize = "2048m"
}

tasks.register('integrationTest', Test) {
    useJUnitPlatform {
        includeTags 'integration'
    }
    jacoco {
        destinationFile = file("build/jacoco/jacoco-integration.exec")
    }
    testLogging {
        events "passed", "skipped", "failed"
    }
    maxHeapSize = "2048m"
}

jacocoTestReport {
    dependsOn "unitTest", "integrationTest"
    reports {
        xml.required = true
        html.required = true
    }
    afterEvaluate {
        executionData = files("$buildDir/jacoco/jacoco-unit.exec", "$buildDir/jacoco/jacoco-integration.exec")
    }
}


jar {
    enabled = false
}
